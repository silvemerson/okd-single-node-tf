name: OKD Single Node Deployment

on:
  workflow_dispatch:
    inputs:
      action:
        description: 'Choose action (create or destroy)'
        required: true
        default: 'create'

jobs:
  terraform:
    runs-on: ubuntu-latest

    steps:

      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: "1.4.6"

      - name: Set up GCP credentials
        uses: google-github-actions/setup-gcloud@v2
        with:
          service_account_key: ${{ secrets.GCP_SA_KEY }}

      - name: Save credentials to file
        run: echo "${{ secrets.GCP_SA_KEY }}" > /tmp/gcp-credentials.json

      # Restore Terraform state from cache
      - name: Restore Terraform state from cache
        uses: actions/cache@v3
        with:
          path: |
            ~/.terraform.d
            terraform.tfstate
          key: terraform-state-${{ runner.os }}-${{ github.sha }}
          restore-keys: |
            terraform-state-${{ runner.os }}-

      - name: Terraform Init
        env:
          TF_VAR_project_id: ${{ secrets.GCP_PROJECT }}      
        run: terraform init

      - name: Terraform Plan
        env:
          TF_VAR_project_id: ${{ secrets.GCP_PROJECT }}      
        run: terraform plan -out=tfplan

      - name: Terraform Apply or Destroy
        env:
          TF_VAR_project_id: ${{ secrets.GCP_PROJECT }}      
        run: |
          if [ "${{ github.event.inputs.action }}" == "create" ]; then
            terraform apply -auto-approve tfplan
          elif [ "${{ github.event.inputs.action }}" == "destroy" ]; then
            terraform destroy -auto-approve
          else
            echo "Invalid action. Please choose either 'create' or 'destroy'."
            exit 1
          fi

      - name: Cache Terraform state
        uses: actions/cache@v3
        with:
          path: |
            ~/.terraform.d
            terraform.tfstate
          key: terraform-state-${{ runner.os }}-${{ github.sha }}

  ansible:
    runs-on: ubuntu-latest
    needs: terraform
    if: ${{ github.event.inputs.action == 'create' }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Ansible
        run: |
          sudo apt update
          sudo apt install -y ansible

      - name: Run Ansible Playbook
        run: |
          ansible-playbook -i inventory.yml playbook.yml


